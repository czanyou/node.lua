cmake_minimum_required(VERSION 2.6)

PROJECT(uci C)

include(../common.cmake)

SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "")
ADD_DEFINITIONS(-Os -Wall -Werror --std=gnu99 -g3 -I. -DUCI_PREFIX="${CMAKE_INSTALL_PREFIX}")

OPTION(UCI_DEBUG "debugging support" OFF)
OPTION(UCI_DEBUG_TYPECAST "typecast debugging support" OFF)
OPTION(BUILD_LUA "build Lua binding" OFF)
OPTION(BUILD_STATIC "statically linking uci" OFF)

message(${CMAKE_CURRENT_SOURCE_DIR})

CONFIGURE_FILE( ${CMAKE_CURRENT_SOURCE_DIR}/uci_config.h.in ${CMAKE_CURRENT_SOURCE_DIR}/uci_config.h )

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} 
	${CMAKE_CURRENT_SOURCE_DIR}/../)

SET(LIB_SOURCES libuci.c file.c util.c delta.c parse.c blob.c)

LINK_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/../build/libubox/")
LINK_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/../build/json-c/")

SET(ubox, ubox)
SET(ubox-static, "ubox")

ADD_LIBRARY(uci SHARED ${LIB_SOURCES})
SET_TARGET_PROPERTIES(uci PROPERTIES OUTPUT_NAME uci)
TARGET_LINK_LIBRARIES(uci ${ubox})

ADD_LIBRARY(uci-static STATIC ${LIB_SOURCES})
SET_TARGET_PROPERTIES(uci-static PROPERTIES OUTPUT_NAME uci)
TARGET_LINK_LIBRARIES(uci-static ${ubox-static})

ADD_EXECUTABLE(ucli cli.c)
SET_TARGET_PROPERTIES(ucli PROPERTIES OUTPUT_NAME uci)
IF(BUILD_STATIC)
  TARGET_LINK_LIBRARIES(ucli uci-static ${ubox-static})
ELSE(BUILD_STATIC)
  TARGET_LINK_LIBRARIES(ucli uci ubox)
ENDIF(BUILD_STATIC)

#ADD_LIBRARY(ucimap STATIC ucimap.c)
#ADD_SUBDIRECTORY(lua)

INSTALL(FILES uci.h uci_config.h uci_blob.h ucimap.h
	DESTINATION include
)

INSTALL(TARGETS uci ucli
	ARCHIVE DESTINATION lib
	LIBRARY DESTINATION lib
	RUNTIME DESTINATION bin
)

