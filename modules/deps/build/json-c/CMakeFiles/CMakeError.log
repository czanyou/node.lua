Determining if the _doprnt exist failed with the following output:
Change Dir: /mnt/c/work/node.lua.tour/modules/deps/build/json-c/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2137366802/fast"
make[1]: Entering directory `/mnt/c/work/node.lua.tour/modules/deps/build/json-c/CMakeFiles/CMakeTmp'
/usr/bin/make -f CMakeFiles/cmTryCompileExec2137366802.dir/build.make CMakeFiles/cmTryCompileExec2137366802.dir/build
make[2]: Entering directory `/mnt/c/work/node.lua.tour/modules/deps/build/json-c/CMakeFiles/CMakeTmp'
/usr/bin/cmake -E cmake_progress_report /mnt/c/work/node.lua.tour/modules/deps/build/json-c/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2137366802.dir/CheckSymbolExists.c.o
/usr/bin/cc  -D_GNU_SOURCE  -o CMakeFiles/cmTryCompileExec2137366802.dir/CheckSymbolExists.c.o   -c /mnt/c/work/node.lua.tour/modules/deps/build/json-c/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/mnt/c/work/node.lua.tour/modules/deps/build/json-c/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/mnt/c/work/node.lua.tour/modules/deps/build/json-c/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: ‘_doprnt’ undeclared (first use in this function)
   return ((int*)(&_doprnt))[argc];
                   ^
/mnt/c/work/node.lua.tour/modules/deps/build/json-c/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: note: each undeclared identifier is reported only once for each function it appears in
make[2]: *** [CMakeFiles/cmTryCompileExec2137366802.dir/CheckSymbolExists.c.o] Error 1
make[2]: Leaving directory `/mnt/c/work/node.lua.tour/modules/deps/build/json-c/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/mnt/c/work/node.lua.tour/modules/deps/build/json-c/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec2137366802/fast] Error 2

File /mnt/c/work/node.lua.tour/modules/deps/build/json-c/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef _doprnt
  return ((int*)(&_doprnt))[argc];
#else
  (void)argc;
  return 0;
#endif
}

